Problem 1:
ALGORITHM distincts_strings
VAR
T1, T2 : ARRAY_OF INTEGER[100];  
i, j   : INTEGER;
sum    : INTEGER;
ch1, ch2, vu1, vu2, token : STRING;             
BEGIN
sum := 0;
ch1 := "";                      
ch2 := "";
vu1 := "";                      
vu2 := "";                      

i := 0;
WHILE (i < T1.length AND T1[i] <> -1) DO
ch1 := ch1 + ConvStr(T1[i]);
i := i + 1;
END_WHILE

j := 0;
WHILE (j < T2.length AND T2[j] <> -1) DO
ch2 := ch2 + ConvStr(T2[j]);
j := j + 1;
END_WHILE
i := 0;
WHILE (i < T1.length AND T1[i] <> -1) DO
token := "" + ConvStr(T1[i]);
IF (Pos(token, vu1) = -1) THEN       
vu1 := vu1 + ConvStr(T1[i]);       
IF (Pos(token, ch2) = -1) THEN    
sum := sum + Value(T1[i]);
END_IF
END_IF
i := i + 1;
END_WHILE

j := 0;
WHILE (j < T2.length AND T2[j] <> -1) DO
token := "" + ConvStr(T2[j]) ;
IF (Pos(token, vu2) = -1) THEN       
vu2 := vu2 + ConvStr(T2[j]) + "#";       
IF (Pos(token, ch1) = -1) THEN    
sum := sum + Value(T2[j]);
END_IF
END_IF
j := j + 1;
END_WHILE

Write("Sum of distinct elements = ");
Write(sum);
END


Problem2:
ALGORITHM dot_product
VAR
V1, V2 : ARRAY_OF REAL[100];          
n, i, k, num_pairs : INTEGER;         
ps      : REAL;                       
EPS     : REAL;                        
is_orth : BOOLEAN;                     
BEGIN
EPS := 0;

k := 0;
WHILE (k < num_pairs) DO
    ps := 0;
	dot_product_PROC(ps,V1,V2,n);
    IF (Abs(ps) < EPS) THEN
        is_orth := TRUE;
    ELSE
        is_orth := FALSE;
    END_IF
    Write("Pair ");
    Write(k);
    Write(": ");
    IF (is_orth) THEN
        Write("Orthogonal");
    ELSE
        Write("Not orthogonal");
    END_IF
    Write("\n");

    k := k + 1;
END_WHILE
END

PROCEDURE dot_product_PROC(ps : REAL; IN v1 : ARRAY_OF REAL[100]; IN v2 : ARRAY_OF REAL[100]; IN n : INTEGER)
VAR
i : INTEGER;
BEGIN
ps := 0;
i := 0;
WHILE (i < n) DO
    ps := ps + (v1[i] * v2[i]);
    i := i + 1;
END_WHILE
END
